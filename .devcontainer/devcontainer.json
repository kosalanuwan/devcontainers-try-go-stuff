{
  "name": "go",
  // See complete list https://hub.docker.com/_/golang/tags
  "image": "golang:bullseye",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    // Http
    8000,
    // Https
    8001
  ],
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "root",
  // Add more features. See complete list https://github.com/devcontainers/features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": true
    },
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "moby": false,
      "dockerDashComposeVersion": "v2"
    },
  },
  "containerEnv": {
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "golang.Go",
        "ms-vscode.makefile-tools",

        "editorconfig.editorconfig",

        "ms-azuretools.vscode-docker",

        "redhat.vscode-yaml",
        "ms-azure-devops.azure-pipelines",

        "bierner.github-markdown-preview",

        "humao.rest-client",

        "ms-vscode.wordcount",
        "streetsidesoftware.code-spell-checker",
        "redhat.fabric8-analytics"
      ],
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "editor.formatOnPaste": true,
        "editor.guides.bracketPairs": "active",
        "debug.internalConsoleOptions": "neverOpen",
        "scm.defaultViewMode": "tree",
        "files.watcherExclude": {
          "**/bin/**": true,
          "**/obj/**": true
        },
        "files.associations": {
          "**/ci/*.yml": "azure-pipelines"
        },
        // Show Request and Response both.
        "rest-client.previewOption": "exchange",

        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/go"
      }
    }
  }
  // Use 'updateContentCommand' to run commands after the container is successfully created.
  // "updateContentCommand": {
  //   "dev-cert": "install dev certs command goes here"
  // },
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": {
  //   "restore": "go restore packages command goes here"
  // }
}
